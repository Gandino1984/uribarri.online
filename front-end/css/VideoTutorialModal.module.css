/* VideoTutorialModal.module.css */

.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.85);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10000;
  padding: 1rem;
  backdrop-filter: blur(4px);
  animation: fadeIn 0.3s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.modalContent {
  background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
  border-radius: 16px;
  width: 100%;
  max-width: 1000px;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  animation: slideUp 0.4s ease-out;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

@keyframes slideUp {
  from {
    transform: translateY(30px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1.5rem;
  border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  background: rgba(255, 255, 255, 0.05);
  border-radius: 16px 16px 0 0;
}

.titleWrapper {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.youtubeIcon {
  color: #ff0000;
  flex-shrink: 0;
}

.modalTitle {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 600;
  color: #ffffff;
  line-height: 1.4;
}

.closeButton {
  background: rgba(255, 255, 255, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  padding: 0.5rem;
  cursor: pointer;
  color: #ffffff;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  flex-shrink: 0;
}

.closeButton:hover {
  background: rgba(255, 255, 255, 0.2);
  transform: scale(1.05);
}

.closeButton:active {
  transform: scale(0.95);
}

.videoWrapper {
  flex: 1;
  position: relative;
  width: 100%;
  padding-bottom: 56.25%; /* 16:9 aspect ratio */
  background: #000000;
  overflow: hidden;
}

.videoIframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: none;
}

.noVideo {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;
  color: #ffffff;
  background: linear-gradient(135deg, #2a2a3e 0%, #1a1a2e 100%);
}

.noVideo svg {
  color: rgba(255, 0, 0, 0.6);
}

.noVideo p {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 500;
}

.comingSoon {
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.6);
  font-style: italic;
}

.modalFooter {
  padding: 1rem 1.5rem;
  background: rgba(0, 0, 0, 0.2);
  border-top: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 0 0 16px 16px;
}

.footerText {
  margin: 0;
  font-size: 0.9rem;
  color: rgba(255, 255, 255, 0.8);
  text-align: center;
}

.channelLink {
  color: #ff0000;
  text-decoration: none;
  font-weight: 600;
  transition: color 0.2s ease;
}

.channelLink:hover {
  color: #ff3333;
  text-decoration: underline;
}

/* Responsive Design */
@media (max-width: 768px) {
  .modalOverlay {
    padding: 0.5rem;
  }

  .modalContent {
    max-height: 95vh;
    border-radius: 12px;
  }

  .modalHeader {
    padding: 1rem;
    border-radius: 12px 12px 0 0;
  }

  .modalTitle {
    font-size: 1rem;
  }

  .titleWrapper {
    gap: 0.5rem;
  }

  .youtubeIcon {
    width: 20px;
    height: 20px;
  }

  .closeButton {
    padding: 0.4rem;
  }

  .closeButton svg {
    width: 20px;
    height: 20px;
  }

  .modalFooter {
    padding: 0.75rem 1rem;
  }

  .footerText {
    font-size: 0.8rem;
  }

  .noVideo p {
    font-size: 1rem;
    padding: 0 1rem;
    text-align: center;
  }

  .comingSoon {
    font-size: 0.85rem;
  }
}

@media (max-width: 480px) {
  .modalContent {
    max-height: 100vh;
    border-radius: 0;
  }

  .modalHeader {
    border-radius: 0;
  }

  .modalFooter {
    border-radius: 0;
  }

  .modalTitle {
    font-size: 0.9rem;
  }

  .footerText {
    font-size: 0.75rem;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .modalOverlay,
  .modalContent {
    animation: none;
  }

  .closeButton {
    transition: none;
  }
}
