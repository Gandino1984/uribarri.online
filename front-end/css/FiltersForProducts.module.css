/* FiltersForProducts.module.css - Updated with app color scheme and improved responsive layout */

.filtersContainer {
  width: 100%;
  max-width: 100%;
  margin-bottom: 1.5rem;
  padding: 0;


  backdrop-filter: blur(10px);
  overflow: visible;
  min-height: fit-content;
  height: auto;
  will-change: transform, opacity;
  transform-style: preserve-3d;
  backface-visibility: hidden;
  position: relative;
  z-index: 1;
}

.filterControls {
  display: flex;
  flex-direction: column;
  background-color: white;
  border-radius: 12px;
  gap: 1rem;
  width: 100%;
  padding: 1rem;
  min-height: fit-content;
  will-change: transform, opacity;
  /*update: Add relative position for close button positioning */
  position: relative;
}

.filterControls:hover {
 box-shadow: 0 0 10px 2px lightgray;
}

/*update: Close button styles */
.closeButton {
  position: absolute;
  top: 0rem;
  /* right: 0rem; */
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  padding: 0;
  background-color: var(--light-gray);
  color: black;
  /* border: 1px solid lightgray; */
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s ease;
  z-index: 10;
  outline: none;
}

.closeButton:hover {
  background-color: lightgray;
  color: black;
  /* border-color: gray; */
  /* transform: rotate(90deg); */
}

.closeButton:active {
  background-color: var(--app-purple-transparent);
  border-color: var(--app-purple);
  /* transform: rotate(90deg) scale(0.95); */
}

/* Row for select filters */
.selectFiltersRow {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.75rem;
  width: 100%;
  min-height: fit-content;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  /*update: Add padding-top to account for close button on mobile */
  padding-top: 2rem;
}

/* Row for checkbox filters */
.checkboxFiltersRow {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.75rem;
  width: 100%;
  min-height: fit-content;
  margin-top: 0.5rem;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) 0.05s;
}

.filterWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
}

/* Select styling matching app theme */
.filterSelect {
  width: 100%;
  max-width: 100%;
  min-height: 2.5rem;
  padding: 0.5rem 1rem 0.5rem 1rem;
  font-size: 0.9rem;
  font-weight: 600;
  color: lightgray;
  background-color: white;
  border-radius: 8px;
  cursor: pointer;
  outline: none;
  border: 2px solid var(--light-gray);
  transition: all 0.2s ease;
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%236b7280' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='M6 9l6 6 6-6'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.5rem center;
  background-size: 1em;
}

/* Hover state */
.filterSelect:hover {
  border: 2px solid var(--app-purple);
  /* background-color: ; */
  /* box-shadow: 0 0 13px 1px var(--saturated-blue-transparent); */
}

.filterSelect:focus {
  background-color: var(--app-purple-transparent);
  border-color: 2px solid var(--app-purple);
  /* background-color: var(--superlight-blue); */
  outline: none;
  /* border: none; */
}

/* Selected values with blue color */
.filterSelect.hasValue {
  color: black !important;
}

/* Keep the blue when hovering a selected value */
.filterSelect.hasValue:hover {
  color: black;
  border: none;
}

/* Option styling */
.filterSelect option {
  font-size: 0.9rem;
  color: black;
  background-color: white;
}

/* First option (placeholder) stays light gray */
.filterSelect option:first-child {
  color: black;
}

/* Toggle filter wrapper styles */
.toggleFilterWrapper {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
}

/* Toggle switch container matching app style */
.toggleSwitchContainer {
  display: flex;
  align-items: center;
  justify-content:space-around;
  width: 100%;
  gap: 1rem;
  padding: 0.5rem 0.75rem;
  background-color: white;
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  min-height: 2.5rem;
  transition: all 0.2s ease;
}

.toggleSwitchContainer:hover {
  background-color: var(--light-gray);
  /* outline: 2px solid var(--saturated-blue); */
  /* box-shadow: 0 0 10px var(--saturated-blue-transparent); */
}

/* Toggle icon and label */
.toggleIconLabel {
  user-select: none;
  display: flex;
  align-items: center;
  gap: 0.5rem;
  color: gray;
  font-size: 0.8rem;
  font-weight: 600;
}

.toggleIconLabel svg {
  display: block;
  flex-shrink: 0;
  color: gray;
}

/* Reset button matching app style */
.resetButtonWrapper {
  display: flex;
  justify-content: center;
  width: 100%;
  margin-top: 0.5rem;

  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1) 0.1s;
}

.resetButton {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  padding: 0.3rem 0.4rem;
  border-radius: 5px;
  font-weight: 600;
  font-size: 0.9rem;
  cursor: pointer;
  background-color: var(--light-gray);
  color: black;
  transition: all 0.2s ease;
  /* border: 1px solid rgba(255, 255, 255, 0.3); */
  outline: none;
}

.resetButton:hover {
  /* color: white; */
  /* border: 1px solid white; */
  background-color: lightgray;
  /* box-shadow: 0 0 12px var(--saturated-blue-transparent); */
}

/* Active (pressed) state for reset button */
.resetButton:active {
  background-color: var(--saturated-blue);
  border-color: var(--saturated-blue);
  color: white;
}

/* Filter count badge */
.filterCount {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: 1.25rem;
  height: 1.25rem;
  padding: 0 0.25rem;
  background-color: var(--gradient-red-mid);
  color: white;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 600;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.2);
  margin-left: 0.25rem;
}

/* Responsive Grid Layouts */
/* Mobile - 1 column */
@media (max-width: 639px) {
  .filterControls {
    padding: 0.75rem;
    padding-bottom: 1rem;
  }
  
  .selectFiltersRow {
    grid-template-columns: 1fr;
    /*update: Adjust padding-top for mobile close button */
    padding-top: 2.5rem;
  }
  
  .checkboxFiltersRow {
    grid-template-columns: 1fr;
    margin-bottom: 0.5rem;
  }
  
  .filterSelect {
    font-size: 0.875rem;
    padding: 0.5rem 0.75rem;
  }
  
  .toggleIconLabel {
    font-size: 0.8rem;
  }
  
  /*update: Adjust close button position for mobile */
  .closeButton {
    top: 0.5rem;
    right: 0.5rem;
  }
}

/* Small tablets - 2 columns */
@media (min-width: 640px) and (max-width: 767px) {
  .selectFiltersRow {
    grid-template-columns: repeat(2, 1fr);
    /*update: Reduce padding-top for tablets */
    padding-top: 1rem;
  }
  
  .checkboxFiltersRow {
    grid-template-columns: repeat(2, 1fr);
  }
}

/* Tablets - 3 columns for selects, 2-3 for toggles */
@media (min-width: 768px) and (max-width: 1023px) {
  .filterControls {
    padding: 1.25rem;
  }
  
  .selectFiltersRow {
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    /*update: Remove extra padding on larger screens */
    padding-top: 0;
  }
  
  .checkboxFiltersRow {
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
  }
  
  /*update: Adjust close button for tablets */
  .closeButton {
    top: 1rem;
    right: 1rem;
  }
}

/* Desktop - optimal columns */
@media (min-width: 1024px) {
  .filterControls {
    padding: 1.5rem;
    gap: 1.25rem;
  }
  
  .selectFiltersRow {
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 1rem;
    /*update: Remove extra padding on desktop */
    padding-top: 0;
  }
  
  .checkboxFiltersRow {
    grid-template-columns: repeat(5, 1fr);
    gap: 1rem;
  }
  
  .toggleSwitchContainer {
    padding: 0.6rem 1rem;
  }
  
  /*update: Desktop close button positioning */
  .closeButton {
    top: 1rem;
    right: 1rem;
    width: 2.25rem;
    height: 2.25rem;
  }
}

/* Large desktop - max width for better readability */
@media (min-width: 1280px) {
  .filtersContainer {
    max-width: 1200px;
    margin-left: auto;
    margin-right: auto;
  }
}

/* Animation classes for smooth transitions */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.filtersContainer {
  animation: slideDown 0.3s ease-out;
  position: relative;
  box-sizing: border-box;
}

/* Ensure all child elements are properly sized */
.filtersContainer * {
  box-sizing: border-box;
}

/* Ensure proper stacking context for dropdowns */
.filterWrapper {
  position: relative;
  z-index: 1;
}

.filterWrapper:hover {
  z-index: 2;
}

/* Dark mode support using CSS variables */
@media (prefers-color-scheme: dark) {
  .filtersContainer {
    background-color: rgba(255, 255, 255, 0.03);
  }
  
  .toggleSwitchContainer {
    background-color: rgba(255, 255, 255, 0.05);
  }
}